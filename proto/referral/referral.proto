syntax = "proto3";
package referral;

option go_package="referral-service/proto/referral";


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
     title: "ReferralService";
     version: "1.0";
     description: "Referral Service openapi definition";
     contact: {
      name: "grpc-with-rest";
      url: "https://github.com/ReferralService";
       };
     };
     schemes: HTTPS;
     consumes: "application/json";
     produces: "application/json";
     responses: {
     key: "404";
     value: {
      description: "Returned when the resource does not exist.";
      schema: {
       json_schema: {
        type: STRING;
       }
      }
     }
    }
};

message GenerateReferralLinkRequest {
    string email = 1;
}
message GenerateReferralLinkResponse {
    string url = 1;
}

message ReferralLinkWrapper {
    GenerateReferralLinkRequest referrallink = 1;  // Field used as HTTP POST body
}

// program

message Program {
    string id = 1;
    string name = 2;
    string title = 3;
    bool active = 4;
    int64 createdat = 5;
    int64 updatedat = 6;
}

message AddProgramRequest {
    string name = 1;
    string title = 2;
    bool active = 3;
}

message AddProgramResponse {
    string id = 1;
}

message UpdateProgramRequest {
    string id = 1;
    optional string name = 2;
    optional string title = 3;
    optional bool active = 4;
}

message UpdagteProgramResponse {
    Program program = 1;
}

message GetProgramsRequest {
    optional int64 page = 1;
    optional int64 size = 2;
}

message GetProgramsResponse {
    repeated Program programs = 1;
}

message GetProgramRequest {
    string id = 1;
}

message GetProgramResponse {
    Program program = 1;
}

// member
message Member {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string program_id = 5;
    string referral_code = 6;
    bool is_active = 7;
    int64 created_at = 8;
    int64 updated_at = 9;
} 

message GetMembersRequest {
    optional int64 page = 1;
    optional int64 size = 2;
}

message GetMembersResponse {
    repeated Member members = 1;
}

message AddMemberRequest {
    string first_name = 1;
    optional string last_name = 2;
    string email = 3;
    optional string referral_code = 4;
    string program_id = 5;
    optional bool is_active = 6;
}

message AddMemberResponse {
    string id = 1;
}

// referral
message Referral {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string phone = 5;
    string referral_code = 6;
    string program_id = 7;
    string referring_member_id = 8;
    string status = 9;
    int64 created_at = 10;
    int64 updated_at = 11;
}

message AddReferralRequest {
    optional string first_name = 1;
    optional string last_name = 2;
    optional string email = 3;
    optional string phone = 4;
    string referral_code = 5;
}

message AddReferralResponse {
    string id = 1;
}

message GetReferralsRequest {
    optional int64 page = 1;
    optional int64 size = 2;
}

message GetReferralsResponse {
    repeated Referral referrals = 1;
}
// service

service referral_service {
    // Referral Program apis
    rpc GetPrograms(GetProgramsRequest) returns (GetProgramsResponse){
        option(google.api.http) = {
            get: "/api/v1/programs",
        };
    }

    rpc GetProgram(GetProgramRequest) returns (GetProgramResponse){
        option(google.api.http) = {
            get: "/api/v1/programs/singleProgram",
        };
    }

    rpc AddProgram(AddProgramRequest) returns (AddProgramResponse) {
        option(google.api.http) = {
            post: "/api/v1/programs",
            body: "*",
        };
    }

    rpc UpdateProgram(UpdateProgramRequest) returns (UpdagteProgramResponse) {
        option(google.api.http) = {
            put: "/api/v1/programs",
            body: "*",
        };
    }

     // Program Membership apis
    rpc GetMembers(GetMembersRequest) returns (GetMembersResponse){
        option(google.api.http) = {
            get: "/api/v1/members",
        };
    }

    rpc AddMember(AddMemberRequest) returns (AddMemberResponse) {
        option(google.api.http) = {
            post: "/api/v1/members",
            body: "*",
        };
    }

    // Member referrals apis
    rpc GetReferrals(GetReferralsRequest) returns (GetReferralsResponse){
        option(google.api.http) = {
            get: "/api/v1/referrals",
        };
    }

    rpc AddReferral(AddReferralRequest) returns (AddReferralResponse) {
        option(google.api.http) = {
            post: "/api/v1/referrals",
            body: "*",
        };
    }
}